pipeline {
    agent any

    environment {
        MONGODB_URI = credentials('mongodb-uri')
        TOKEN_KEY = credentials('token-key')
        EMAIL = credentials('email')
        PASSWORD = credentials('password')
        NVD_API_KEY = credentials('nvd-api')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        // Owasp Dependency Check
        // stage('OWASP Dependency Check') {
        //     steps {
        //         echo 'Running OWASP Dependency Check...'
        //         dependencyCheck additionalArguments: "--scan ./ --nvdApiKey=$NVD_API_KEY", odcInstallation: 'DP-check'
        //         dependencyCheckPublisher pattern: 'dependency-check-report.xml'
        //     }
        // }

        // OWASP Dependency Check
        stage('OWASP Dependency Check') {
            steps {
                echo 'Running OWASP Dependency Check...'
                script {
                    dependencyCheck additionalArguments: "--scan ./ --nvdApiKey=${env.NVD_API_KEY}", odcInstallation: 'DP-check'
                }
                dependencyCheckPublisher pattern: 'dependency-check-report.xml'
            }
        }

        stage('Frontend Tests') {
            steps {
                dir('Frontend') {
                    bat 'npm install'
                    // bat 'npm test'
                }
            }
        }

        stage('Backend Tests') {
            steps {
                dir('Backend') {
                    bat 'npm install'
                    bat 'set MONGODB_URI=$MONGODB_URI'
                    bat 'set TOKEN_KEY=$TOKEN_KEY'
                    bat 'set EMAIL=$EMAIL'
                    bat 'set PASSWORD=$PASSWORD'
                    // bat 'npm test'
                }
            }
        }

        stage('Build and Push to Docker') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        bat 'docker-compose build'
                        bat 'docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%'
                        bat 'docker-compose push'
                    }
                }
            }
        }
    }
}
