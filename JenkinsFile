pipeline {
    agent any

    environment {
        MONGODB_URI = credentials('mongodb-uri')
        TOKEN_KEY = credentials('token-key')
        EMAIL = credentials('email')
        PASSWORD = credentials('password')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        // Owasp Dependency Check
        stage('OWASP Dependency Check') {
            steps {
                dir('Frontend') {
                    // bat 'dependency-check.bat --project "Frontend" --scan . --format "ALL" --out ./owasp-reports/'
                }
                dir('Backend') {
                    // bat 'dependency-check.bat --project "Backend" --scan . --format "ALL" --out ./owasp-reports/'
                }
            }
        }

        stage('Frontend Tests') {
            steps {
                dir('Frontend') {
                    bat 'npm install'
                    // bat 'npm test'
                }
            }
        }

        stage('Backend Tests') {
            steps {
                dir('Backend') {
                    bat 'npm install'
                    bat 'set MONGODB_URI=$MONGODB_URI'
                    bat 'set TOKEN_KEY=$TOKEN_KEY'
                    bat 'set EMAIL=$EMAIL'
                    bat 'set PASSWORD=$PASSWORD'
                    // bat 'npm test'
                }
            }
        }

        stage('Build and Push to Docker') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        bat 'docker-compose build'
                        bat 'docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%'
                        bat 'docker-compose push'
                    }
                }
            }
        }
    }
}
